---
# tasks file for prometheus

# ------------------------------------------------------------------- wp-veritas
- name: Get URLs from wp-veritas API
  local_action:
    module: shell
    cmd: "{{ role_path }}/vars/sites_from_veritas"
  changed_when: false
  check_mode: false  ## Meaning that yes, it supports check mode
  register: sites_from_veritas

# ------------------------------------------------------------------ Directories
- name: Create writable directories to be used as mount points
  file:
    path: "{{ item }}"
    state: directory
    mode: "u=rwx,g=rwx,o=rwx"
  with_items:
    - "{{ install_path }}/prometheus"
    - "{{ install_path }}/prometheus/dynamic"

- name: Check whether dynamic/targets.json is present
  stat:
    path: "{{ install_path }}/prometheus/dynamic/targets.json"
  register: _dynamic_targets_json

- name: ensure dynamic/targets.json is present
  when: >-
    _dynamic_targets_json is defined
    and not (
    _dynamic_targets_json.stat
    and
    _dynamic_targets_json.stat.isreg
    )
  file:
    path: "{{ install_path }}/prometheus/dynamic/targets.json"
    owner: root
    group: root
    mode: '1777'
    state: touch

# -------------------------------------------------------------------- Templates
- name: Copy prometheus template configs
  template:
    src: "prometheus/{{ item }}"
    dest: "{{ install_path }}/prometheus/{{ item }}"
  with_items:
    - prometheus.yml
  register: _prometheus_template_file

- name: Copy prometheus rules
  template: 
    src: "{{ item }}"
    dest: "{{ install_path }}/prometheus/rules/{{ item | basename }}"
  with_fileglob:
    - "templates/prometheus/rules/*.yml"
  register: _prometheus_rules

- name: Copy prometheus-site-service-discovery.py
  template:
    src: "prometheus-site-service-discovery.py"
    dest: "{{ install_path }}/prometheus/prometheus-site-service-discovery.py"
  register: _prometheus_configurator

- name: configurator
  docker_container:
    name: configurator
    image: python:3.7-alpine
    restart: "{{ _prometheus_configurator is changed or _prometheus_configurator is changed }}"
    command:
      - /usr/bin/env
      - python3
      - "/srv/prometheus-site-service-discovery.py"
    detach: yes
    restart_policy: unless-stopped
    network_mode: "{{ backend_network_name }}"
    volumes:
      - "{{ install_path }}/prometheus:/srv"

# -------------------------------------------------------------------- Container
- name: Run prometheus
  docker_container:
    name: "{{ prometheus_container_name }}"
    image: "{{ prometheus_image }}:{{ prometheus_version }}"
    restart: >-
      {{
      (_prometheus_template_file is defined and _prometheus_template_file is changed)
      or
      ( (_prometheus_rules | default({})) is changed)
      or
      ("prometheus.force-restart" in ansible_run_tags)
      }}
    command: >-
      --config.file=/etc/prometheus/prometheus.yml
      --web.external-url=https://prometheus.noc{{ dns_suffix }}.{{ frontend.domain }}
      {% if runenv == "dev" %}
        --log.level=debug
      {% endif %}
    detach: yes
    restart_policy: unless-stopped
    network_mode: "{{ backend_network_name }}"
    volumes:
      - "{{ install_path }}/prometheus:/etc/prometheus"
      - "{{ data_path }}/prometheus:/prometheus"
    log_driver: json-file
    log_options:
      max-size: 50m
      max-file: "3"
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus.rule: "Host(`prometheus.noc{{ dns_suffix }}.{{ frontend.domain }}`)"
      traefik.http.routers.prometheus.entrypoints: "websecure"
      traefik.http.routers.prometheus.tls.certresolver: "letsencrypt"
      traefik.docker.network: "{{ backend_network_name }}"
      traefik.http.routers.prometheus.middlewares: "prometheus_auth"
      traefik.http.middlewares.prometheus_auth.basicauth.users: "{{ frontend.htpass }}"
      traefik.http.middlewares.prometheus_auth.basicauth.removeheader: "true"
  tags:
   - prometheus.force-restart
