---
# tasks file for idevfsd-traefik

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "755"
  tags:
    - traefik
  with_items:
    - "{{ traefik_state_path }}/dynamic"
    - "{{ data_path }}/traefik/acme/"

- name: Copy traefik static config
  template:
    src: "traefik.yml"
    dest: "{{ traefik_state_path }}/traefik.yml"
  tags:
    - traefik
    - traefik.config
    - traefik.config.static
  register: _traefik_config

- name: Copy traefik dynamic config
  template:
    src: "{{ item }}"
    dest: "{{ traefik_state_path }}/dynamic/{{ item }}"
  tags:
    - traefik
    - traefik.config
    - traefik.config.dynamic
  with_items:
    - traefik-dynamic-traefik-internal-services.yml

- name: Run traefik
  docker_container:
    name: "{{ traefik_container_name }}"
    image: "{{ traefik_image }}:{{ traefik_version }}"
    detach: yes
    restart: "{{ _traefik_config is changed }}"
    restart_policy: unless-stopped
    ports:
      - "80:80" # The HTTP port
      - "443:443"
    network_mode: "{{ backend_network_name }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - "{{ traefik_state_path }}/traefik.yml:/traefik.yml"
      - "{{ traefik_state_path }}/dynamic:/etc/traefik/dynamic"
      - "{{ data_path }}/traefik/acme:/acme"
    log_driver: json-file
    log_options:
      max-size: 50m
      max-file: "3"
  tags:
    - traefik

# https://docs.traefik.io/user-guides/docker-compose/acme-tls/
- name: Run whoami
  docker_container:
    name: "whoami"
    image: "containous/whoami"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.whoami.rule: "Host(`whoami-tst.idev-fsd.ml`)"
      traefik.http.routers.whoami.entrypoints: "websecure"
      traefik.http.routers.whoami.tls.certresolver: "letsencrypt"
    network_mode: "{{ backend_network_name }}"
  when: traefik_debug
  tags:
    - whoami
