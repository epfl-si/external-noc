---
# Blackbox-exporter config. Generated by Ansible. Please do not edit.
modules:
  http_post:
    prober: http
    timeout: 15s
    http:
      method: POST
      headers:
        Content-Type: application/json
      body: '{}'
  http_get:
    prober: http
    timeout: 15s
    http:
      method: GET
      preferred_ip_protocol: ip4
  # To use with caution
  http_get_no_cf:
    prober: http
    timeout: 15s
    http:
      method: GET
      preferred_ip_protocol: ip4
      headers:
        Cookie: wordpress_logged_in_bbe_probe=on
  # # TBD: The idea here would be to set the Header to the actual www name and instead do the GET with the IP of A10
  # #      Something equivalent to curl -H "Host: www.epfl.ch" http://128.178.222.108
  # #      In fact this does not work with https :(  we have to find a way to
  # #      reproduce curl -Iv --connect-to www.epfl.ch:443:128.178.222.108:443 https://www.epfl.ch
  # #      In alternative, we can try to figure out how to set a cookie with name wordpress_logged_in_.*
  # http_get_nocache:
  #   prober: http
  #   timeout: 15s
  #   http:
  #     method: GET
  #     preferred_ip_protocol: ip4
  tcp_connect:
    prober: tcp
    timeout: 5s
  icmp:
    prober: icmp
    timeout: 5s

# https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
#modules:
#  http_2xx_example:
#    prober: http
#    timeout: 5s
#    http:
#      valid_http_versions: ["HTTP/1.1", "HTTP/2"]
#      valid_status_codes: []  # Defaults to 2xx
#      method: GET
#      headers:
#        Host: vhost.example.com
#        Accept-Language: en-US
#        Origin: example.com
#      no_follow_redirects: false
#      fail_if_ssl: false
#      fail_if_not_ssl: false
#      fail_if_body_matches_regexp:
#        - "Could not connect to database"
#      fail_if_body_not_matches_regexp:
#        - "Download the latest version here"
#      fail_if_header_matches: # Verifies that no cookies are set
#        - header: Set-Cookie
#          allow_missing: true
#          regexp: '.*'
#      fail_if_header_not_matches:
#        - header: Access-Control-Allow-Origin
#          regexp: '(\*|example\.com)'
#      tls_config:
#        insecure_skip_verify: false
#      preferred_ip_protocol: "ip4" # defaults to "ip6"
#      ip_protocol_fallback: false  # no fallback to "ip6"
#  http_post_2xx:
#    prober: http
#    timeout: 5s
#    http:
#      method: POST
#      headers:
#        Content-Type: application/json
#      body: '{}'
#  http_basic_auth_example:
#    prober: http
#    timeout: 5s
#    http:
#      method: POST
#      headers:
#        Host: "login.example.com"
#      basic_auth:
#        username: "username"
#        password: "mysecret"
#  http_custom_ca_example:
#    prober: http
#    http:
#      method: GET
#      tls_config:
#        ca_file: "/certs/my_cert.crt"
#  tls_connect:
#    prober: tcp
#    timeout: 5s
#    tcp:
#      tls: true
#  tcp_connect_example:
#    prober: tcp
#    timeout: 5s
#  imap_starttls:
#    prober: tcp
#    timeout: 5s
#    tcp:
#      query_response:
#        - expect: "OK.*STARTTLS"
#        - send: ". STARTTLS"
#        - expect: "OK"
#        - starttls: true
#        - send: ". capability"
#        - expect: "CAPABILITY IMAP4rev1"
#  smtp_starttls:
#    prober: tcp
#    timeout: 5s
#    tcp:
#      query_response:
#        - expect: "^220 ([^ ]+) ESMTP (.+)$"
#        - send: "EHLO prober"
#        - expect: "^250-STARTTLS"
#        - send: "STARTTLS"
#        - expect: "^220"
#        - starttls: true
#        - send: "EHLO prober"
#        - expect: "^250-AUTH"
#        - send: "QUIT"
#  irc_banner_example:
#    prober: tcp
#    timeout: 5s
#    tcp:
#      query_response:
#        - send: "NICK prober"
#        - send: "USER prober prober prober :prober"
#        - expect: "PING :([^ ]+)"
#          send: "PONG ${1}"
#        - expect: "^:[^ ]+ 001"
#  icmp_example:
#    prober: icmp
#    timeout: 5s
#    icmp:
#      preferred_ip_protocol: "ip4"
#      source_ip_address: "127.0.0.1"
#  dns_udp_example:
#    prober: dns
#    timeout: 5s
#    dns:
#      query_name: "www.prometheus.io"
#      query_type: "A"
#      valid_rcodes:
#      - NOERROR
#      validate_answer_rrs:
#        fail_if_matches_regexp:
#        - ".*127.0.0.1"
#        fail_if_not_matches_regexp:
#        - "www.prometheus.io.\t300\tIN\tA\t127.0.0.1"
#      validate_authority_rrs:
#        fail_if_matches_regexp:
#        - ".*127.0.0.1"
#      validate_additional_rrs:
#        fail_if_matches_regexp:
#        - ".*127.0.0.1"
#  dns_soa:
#    prober: dns
#    dns:
#      query_name: "prometheus.io"
#      query_type: "SOA"
#  dns_tcp_example:
#    prober: dns
#    dns:
#      transport_protocol: "tcp" # defaults to "udp"
#      preferred_ip_protocol: "ip4" # defaults to "ip6"
#query_name: "www.prometheus.io"
